# TODO cache gradle and libpostal install
name: Test and Build
on:
  push:
jobs:
  test-and-build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-latest
            jarSuffix: 'linux-x86-64'
          - platform: ubuntu-latest-arm64
            jarSuffix: 'linux-aarch64'
          - platform: macos-latest
            jarSuffix: 'macos-x86-64'
          - platform: macos-latest-arm64
            jarSuffix: 'macos-aarch64'
    runs-on: ${{ matrix.platform }}
    steps:
      # only intel mac needs homebrew for automake
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
        if: matrix.platform == 'macos-latest'
      - name: Install automake
        if: matrix.platform == 'macos-latest'
        run: brew install curl autoconf automake libtool pkg-config
      - uses: actions/checkout@v4
        with:
          repository: openvenues/libpostal
          path: libpostal
      - name: Install libtool
        run: |
          cd libpostal
          ./bootstrap.sh
          mkdir data_dir
          ./configure --datadir=`pwd`/data_dir MODEL=senzing
          sudo make -j4
          sudo make install
      - name: Run ldconfig
        if: startsWith(matrix.platform, 'ubuntu')
        run: sudo ldconfig
      - uses: actions/checkout@v4
        with:
          path: jpostal
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Run tests with Gradle Wrapper
        run: |
          cd jpostal
          ./gradlew assemble check
      - name: Get jpostal Version from Gradle
        run: |
          VERSION=$(grep '^version' jpostal/build.gradle | awk -F\' '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Upload jar
        uses: actions/upload-artifact@v4
        with:
          name: jpostal-${{ env.NAME }}-${{ matrix.jarSuffix }}
          path: jpostal/build/libs/jpostal*.jar
