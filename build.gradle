import org.gradle.internal.jvm.Jvm

plugins {
    id 'c'
    id 'java'
    id 'application'
}

version = '1.0.0'

repositories {
    mavenCentral()
}

sourceSets.main.java.srcDirs = ["src/main/java"]
sourceSets.test.java.srcDirs = ["src/test/java"]

model {
    toolChains {
        clang(Clang) {
            target("linux_aarch64") {
                cCompiler.executable = "aarch64-linux-gnu-gcc"
                linker.executable = "aarch64-linux-gnu-gcc"
            }
        }
        gcc(Gcc) {
            target("linux_aarch64") {
                cCompiler.executable = "aarch64-linux-gnu-gcc"
                linker.executable = "aarch64-linux-gnu-gcc"
            }
        }
    }

    components {
        jpostal(NativeLibrarySpec) {
            binaries.all {
                def jvmHome = Jvm.current().javaHome
                if (targetPlatform.operatingSystem.macOsX) {
                    cCompiler.args '-I', "${jvmHome}/include"
                    cCompiler.args '-I', "${jvmHome}/include/darwin"
                    cCompiler.args '-mmacosx-version-min=10.9'
                    linker.args '-mmacosx-version-min=10.9'
                    linker.args '-stdlib=libc++'
                } else if (targetPlatform.operatingSystem.linux) {
                    cCompiler.args '-I', "${jvmHome}/include"
                    cCompiler.args '-I', "${jvmHome}/include/linux"
                    cCompiler.args '-D_FILE_OFFSET_BITS=64'
                } else if (targetPlatform.operatingSystem.windows) {
                    cCompiler.args "-I${jvmHome}/include"
                    cCompiler.args "-I${jvmHome}/include/win32"
                } else if (targetPlatform.operatingSystem.freeBSD) {
                    cCompiler.args '-I', "${jvmHome}/include"
                    cCompiler.args '-I', "${jvmHome}/include/freebsd"
                }
                linker.args '-lpostal'  // Link with libpostal
            }
        }
    }
}

classes.dependsOn 'jpostalSharedLibrary'

processResources.dependsOn(':linkJpostalSharedLibrary')
sourceSets {
    main {
        resources {
            srcDir "$buildDir/libs/jpostal/shared"
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.+'
}

jar {
    archiveBaseName.set(project.name)
    archiveVersion.set(project.version.toString())
}
